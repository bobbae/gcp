

export PROJECT=your-project-123

export REGION=us-central1
export ZONE=us-central1-a

export BUCKET=$PROJECT-bucket

export GOOGLE_APPLICATION_CREDENTIALS=~/.config/gcloud/$PROJECT-credentials.json
export GOOGLE_CLOUD_PROJECT=$PROJECT

gcloud auth list

gcloud auth login

gcloud config set project $PROJECT

gcloud config get-value project

gcloud config set account your.name@email.com

gcloud config list

gcloud compute zones list

gcloud config set compute/zone us-central1-a

gcloud components install datalab


gcloud compute instances create yourname-instance-1 --zone us-central1-a --machine-type f1-micro --image-project ubuntu-os-cloud --image-family ubuntu-2104 --boot-disk-type pd-standard --boot-disk-size 30GB

gcloud compute instances create simple-apache --metadata-from-file startup-script=install-apache.sh --metadata foo=bar

---startup-script install-apache.sh-----
#!/bin/bash
VALUE_OF_FOO=$(curl http://metadata/computeMetadata/v1/instance/attributes/foo -H "Metadata-Flavor: Google")
apt-get update
apt-get install -y apache2
cat <<EOF > /var/www/index.html
<html><body><h1>Hello World</h1>
<p>This page was created from a simple startup script!</p>
<p>The value of foo: $VALUE_OF_FOO</p>
</body></html>
EOF
--------------------

gcloud compute firewall-rules describe allow-http

gcloud compute firewall-rules list

gcloud compute firewall-rules create http2 --description="Incoming http allowed."  --allow tcp:80

gcloud compute firewall-rules create allow-8080 --allow=TCP:8080 --target-tags=allow-8080 --source-ranges=0.0.0.0/0

gcloud compute instances add-tags your-company-u-general-instance-1  --zone us-west2-a --tags allow-8080



gcloud compute instances describe your-company-u-general-instance-1 --zone us-west2-a --format json | jp - print /networkInterfaces[0]/accessConfigs[0]/natIP


gcloud compute networks list
 
gcloud compute networks subnets list --network=default 
 
gcloud compute regions list
 
gcloud compute zones list --filter="region=asia-south1"
 
gcloud compute machine-types list --zones=asia-south1-a
 
gcloud compute images list --filter="family=centos-7"
 
gcloud compute disk-types list --zones=asia-south1-a
 
gcloud compute instances create myinstance --zone=asia-south1-a  --machine-type=f1-micro --image-project=centos-cloud --image-family=centos-7 --boot-disk-type=pd-standard --boot-disk-size=10GB
 
gcloud compute instances get-serial-output INSTANCE

gcloud compute instances list
 
gcloud compute instances describe myinstance --zone=asia-south1-a 
 
gcloud beta compute --project $PROJECT ssh --zone "asia-south1-a" "myinstance"

gcloud auth list

gcloud config list project
 
gcloud compute zones list

gcloud config set compute/zone us-central1-a

gcloud container clusters create nice-k8s-cluster 

gcloud container clusters create visitcount-cluster --num-nodes=3 --enable-ip-alias

gcloud container clusters list

gcloud docker -- push gcr.io/${PROJECT_ID}/visit-counter:v1

gcloud container clusters get-credentials nice-k8s-cluster

kubectl get pods --all-namespaces

kubectl create deployment hello-app --image=gcr.io/google-samples/hello-app:1.0

kubectl get deploy

kubectl expose deployment hello-app  --type LoadBalancer --port=80 --target-port=8080

kubectl get svc

kubectl get svc --all-namespaces

kubectl krew install kudo

kubectl krew install minio

kubectl krew update

kubectl kudo init

kubectl kudo init --dry-run -o=yaml > kudo.yaml

kubectl logs -n kubebuilder-example-system -c 42a5bbdf1a2e5b85fdb38efd0f5a44f19c630dd9e51650c935330b0adfdcf684

kubectl logs kubebuilder-example-controller-manager-5687b8b94f-88n6k -n kubebuilder-example-system -c manager

kubectl logs pod/kubebuilder-example-controller-manager-5687b8b94f-88n6k -n kubebuilder-example-system -c 42a5bbdf1a2e5b85fdb38efd0f5a44f19c630dd9e51650c935330b0adfdcf684

kubectl logs pod/kubebuilder-example-controller-manager-5687b8b94f-88n6k -n kubebuilder-example-system -c docker://42a5bbdf1a2e5b85fdb38efd0f5a44f19c630dd9e51650c935330b0adfdcf684

kubectl scale deployment hello-app --replicas=3

kubectl run curl --image=radial/busyboxplus:curl -i --tty

kustomize build config/default | kubectl delete -f -

kubectl get secret meme-server-secret

kubectl describe certificate -n cert-manager-test

kubectl describe secret meme-server-secret -o yaml

kubectl exec --stdin --tty visit-counter-6dfbf99dcc-c76cw -- /bin/bash

kubectl exec -it frontend-5c8bf948c-l2zm6 sh

kubectl exec -it kubectl run curl --image=radial/busyboxplus:curl -i --tty

kubectl exec -it multi-container-pod -- /bin/sh

kubectl expose deployment hello-app --name=hello-app-service --type=LoadBalancer --port 80 --target-port 8080

kubectl expose deployment web2 --type=NodePort --port=8080

kubectl expose deployment hello-app2 --name=hello-app-service2 --type=LoadBalancer --port 80 --target-port 8080

kubectl describe pod/kubebuilder-example-controller-manager-5687b8b94f-88n6k -n kubebuilder-example-system

kubectl get service web

kubectl get services/my-minio-fs -o go-template='{{(index .spec.ports 0).nodePort}}'

gcloud container clusters delete nice-k8s-cluster

gcloud components update

gcloud emulators spanner start

gcloud services enable cloudresourcemanager.googleapis.com

gcloud services enable cloudbilling.googleapis.com

gcloud services enable iam.googleapis.com

gcloud services enable compute.googleapis.com

gcloud services enable serviceusage.googleapis.com

gcloud services enable containerregistry.googleapis.com

gcloud services enable cloudfunctions.googleapis.com

gcloud services enable run.googleapis.com

gcloud services enable workflows.googleapis.com

gcloud services enable cloudbuild.googleapis.com

gcloud services enable storage.googleapis.com

gcloud services enable compute.googleapis.com  

gcloud services enable bigtable.googleapis.com  

gcloud services enable bigtableadmin.googleapis.com  

gcloud services enable logging.googleapis.com

gcloud organizations list

gcloud organizations describe 123456849494

gcloud beta billing accounts list

gcloud projects list

gcloud alpha resource-manager folders list --folder 39393939339

gcloud projects create $PROJECT --folder 29393939393

gcloud projects describe $PROJECT

gcloud projects delete $PROJECT

gcloud beta billing projects link $PROJECT --billing-account 293993-39393-393939393

gcloud beta billing projects describe $PROJECT

gcloud iam service-accounts create $PROJECT 

gcloud iam service-accounts keys create ~/.config/gcloud/$PROJECT-credentials.json --iam-account $PROJECT@$PROJECT.iam.gserviceaccount.com

gcloud projects add-iam-policy-binding $PROJECT --member serviceAccount:$PROJECT@$PROJECT.iam.gserviceaccount.com --role roles/owner

gcloud projects add-iam-policy-binding $PROJECT --member serviceAccount:$PROJECT@$PROJECT.iam.gserviceaccount.com --role roles/storage.admin

gcloud organizations add-iam-policy-binding 43663619702  --member serviceAccount:$PROJECT@$PROJECT.iam.gserviceaccount.com --role roles/resourcemanager.projectCreator

gcloud organizations add-iam-policy-binding 43663619702  --member serviceAccount:$PROJECT@$PROJECT.iam.gserviceaccount.com --role roles/billing.user

gcloud organizations remove-iam-policy-binding 43663619702 --member serviceAccount:$PROJECT@$PROJECT.iam.gserviceaccount.com  --role roles/resourcemanager.projectCreator

gcloud organizations remove-iam-policy-binding 43663619702  --member serviceAccount:$PROJECT@$PROJECT.iam.gserviceaccount.com  --role roles/billing.user

gcloud iam service-accounts add-iam-policy-binding @appspot.gserviceaccount.com --member=user: --role=roles/iam.serviceAccountUser

gcloud projects add-iam-policy-binding your-company--1-94252 --member=serviceAccount:3838383855611-compute@developer.gserviceaccount.com --role='roles/owner'

gcloud projects add-iam-policy-binding your-company--1-94252 --member=serviceAccount:3838383855611-compute@developer.gserviceaccount.com --role roles/logging.logWrite

gcloud iam service-accounts create workflows-sa

gcloud projects add-iam-policy-binding $PROJECT_ID --member "serviceAccount:workflows-sa@$PROJECT_ID.iam.gserviceaccount.com" --role "roles/run.invoker"

gcloud iam service-accounts add-iam-policy-binding  storage@your-company-u-sess-3-firestore.iam.gserviceaccount.com  --member user:your.name@your-company.com --role 'roles/storage.objects.list'

gcloud iam service-accounts add-iam-policy-binding  storage@your-company-u-sess-3-firestore.iam.gserviceaccount.com  --member user:your.name@your-company.com --role 'roles/storage.objectAdmin'

gcloud iam service-accounts add-iam-policy-binding  storage@your-company-u-sess-3-firestore.iam.gserviceaccount.com  --member user:your.name@your-company.com --role 'roles/storage.buckets.update'

gcloud iam service-accounts create my-gcs-account-1 create --display-name my-gcs-account-1

SA_EMAIL=$(gcloud iam service-accounts list --filter="displayName:$SERVICE_ACCOUNT_NAME" --format='value(email)')

PROJECT=$(gcloud config get-value project)

gcloud iam service-accounts create $SERVICE_ACCOUNT_NAME --display-name $SERVICE_ACCOUNT_NAME

gcloud iam roles list

gcloud projects add-iam-policy-binding $PROJECT --role roles/storage.admin --member serviceAccount:$SA_EMAIL

gcloud projects get-iam-policy $PROJECT

gcloud projects get-iam-policy your-company-u--firestore --flatten='bindings[].members' --format='table(bindings.role)' --filter='bindings.members:-gcs-account-1@your-company-u--firestore.iam.gserviceaccount.com'

SERVICE_ACCOUNT_DEST=~/gcs-artifacts-account.json

gcloud iam service-accounts keys create $SERVICE_ACCOUNT_DEST   --iam-account $SA_EMAIL

gcloud container clusters list

gcloud container clusters create mycluster1 --num-nodes=3 --enable-ip-alias

gcloud container clusters get-credentials [CLUSTER_NAME] --zone [CLUSTER_ZONE] --project [PROJECT_ID]

gcloud mb gs://your-company-u-cloud-shell-disk

gcloud composer environments list

gcloud iam service-accounts list

gcloud composer environments create my-composer-environment --location=us-central1

gcloud beta iam service-accounts undelete 28282828282-compute@developer.gserviceaccount.com  

gcloud beta iam service-accounts undelete 93939393399393939393

gcloud dataproc clusters create mycluster1 --region $REGION --zone $ZONE --single-node --master-machine-type n1-standard-1 --master-boot-disk-size 500 --image-version 1.3-deb9 --project $PROJECT

gcloud dataproc clusters create cluster2 --region $REGION --zone $ZONE --num-workers 2 --worker-machine-type n1-standard-4  --master-machine-type n1-standard-4 --master-boot-disk-size 500 --image-version 1.3-deb9 --project $PROJECT_ID

gcloud dataproc jobs list --region $REGION

gcloud dataproc jobs submit pyspark gs://your-company-u/international_loans_dataproc_large.py --region $REGION --cluster mycluster2 --async

gcloud redis instances describe myinstance --region=us-central1

gcloud functions deploy randomgen --runtime python37 --trigger-http --allow-unauthenticated

gcloud functions describe randomgen

gcloud functions describe randomgen --format=value('httpsTrigger.url')

curl $(gcloud functions describe randomgen --format='value(httpsTrigger.url))'

curl $(gcloud functions describe multiply --format='value(httpsTrigger.url'))' -X POST -H "content-type: application/json" -d '{"input": 5}'

gcloud workflows deploy workflow --source workflow.yaml

gcloud workflows list

gcloud workflows run projects/your-company--1-94252/locations/us-central1/workflows/workflow

gcloud builds submit --tag gcr.io/your-company--1-94252/floor

gcloud run deploy floor --image gcr.io/your-company--1-94252/floor --platform managed --no-allow-unauthenticated

gcloud run services list --platform managed --format 'value(URL)'

~/scripts/templater.sh workflow.tmpl > workflow.yaml

gcloud workflows deploy workflow --source workflow.yaml --service-account  workflows-sa@$PROJECT_ID.iam.gserviceaccount.com

gcloud workflows execute workflow

gcloud workflows executions list  workflow --format 'value(NAME)' 

gcloud workflows executions describe b5157139-732b-43dc-b0a1-22d3fd31fc98 --workflow workflow

gcsfuse --foreground --debug_gcs --debug_http --debug_fuse --debug_invariants --key-file=your-company--1-94252-2a97b14802e5.json your-company-u mp

gcsfuse --key-file /home/yourname_info/your-company--1-94252-2a97b14802e5.json your-company-u mp

gcloud pubsub topics create cron-topic

gcloud scheduler jobs create pubsub publisher-job --schedule "* * * * *" --topic cron-topic --message-body 'Hello!'

gcloud scheduler jobs run publisher-job

gcloud scheduler jobs delete publisher-job

gcloud pubsub topics delete cron-topic

gcloud dataflow jobs list

gsutil ls gs://dataflow-templates/latest

gsutil setacl public-read gs://bucket/file

gcloud pubsub subscriptions list

python -m pip install --upgrade google-cloud-storage

python -m pip install --upgrade google-cloud-pubsub

python -m pip install --upgrade google-cloud-bigquery

gcloud info --format='value(config.project)'

gcloud bigtable instances create cbt-oc  --cluster=cbt-oc  --cluster-zone=us-central1-c  --display-name=cbt-oc  --instance-type=DEVELOPMENT

gcloud compute instances create trace-client  --zone=us-central1-c  --scopes="https://www.googleapis.com/auth/bigtable.admin.table, https://www.googleapis.com/auth/bigtable.data, https://www.googleapis.com/auth/logging.write, https://www.googleapis.com/auth/monitoring.write, https://www.googleapis.com/auth/trace.append"

gcloud compute ssh trace-client --zone=us-central1-c


gcloud config set account yourname.info@your-company.com

gcloud auth login yourname.info@your-company.com

gcloud config get-value project

gcloud compute zones list

gcloud config set compute/zone us-central1-a

gcloud config set project your-company--1-94252

gcloud components install datalab

gcloud container clusters list

gcloud container clusters create mycluster1 --num-nodes=3 --enable-ip-alias

gcloud container clusters get-credentials [CLUSTER_NAME] --zone [CLUSTER_ZONE] --project [PROJECT_ID]

gcloud mb gs://your-company-u-cloud-shell-disk

gcloud iam service-accounts list

gcloud composer environments list

gcloud dataproc jobs list --region $REGION

gcloud dataflow jobs list

gcloud pubsub subscriptions list

gcloud compute instances create yourname-instance-1 --zone us-central1-a --machine-type f1-micro --image-project ubuntu-os-cloud --image-family ubuntu-2104 --boot-disk-type pd-standard --boot-disk-size 30GB

gcloud organizations remove-iam-policy-binding 43663619702   --member serviceAccount:$PROJECT@$PROJECT.iam.gserviceaccount.com   --role roles/resourcemanager.projectCreator

gcloud organizations remove-iam-policy-binding 43663619702   --member serviceAccount:$PROJECT@$PROJECT.iam.gserviceaccount.com   --role roles/billing.user



